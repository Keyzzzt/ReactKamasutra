{"version":3,"sources":["styles/Dialogs.module.css","HOC/WithAuthRedirect.js","Components/Dialogs/Message.jsx","Components/Dialogs/DialogItem.jsx","Components/Forms/Dialog.jsx","Components/Dialogs/Dialogs.jsx","Components/DialogsContainer.js"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","message","className","style","DialogItem","name","id","s","dialog","active","maxLength50","maxLengthCreator","ReduxDialogForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","DialogMessageForm","onSubmitHandler","Dialogs","dialogs","messages","sendMessage","dialogsItems","map","el","m","Dialog","formData","newMessageBody","compose","dialogsPage","newMessageText","dispatch","createNewMessageAC"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,qJCG9MC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKC,MAAMN,OAGR,cAACG,EAAD,eAAeE,KAAKC,QAFhB,cAAC,IAAD,CAAUC,GAAG,eAJW,GACXC,IAAML,WAWtC,OAFiCM,YAAQX,EAARW,CAAyBL,K,kFCT/CM,EAPQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACI,qBAAKC,UAAWC,IAAMF,QAAtB,SAAgCA,K,QCOzBG,EARW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC/B,OACI,qBAAKJ,UAAWK,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASZ,GAAE,mBAAcS,GAAzB,SAAgCD,O,iCCKtCK,EAAcC,YAAiB,IAgB/BC,EAAkBC,YAAU,CAE9BC,KAAM,UAFcD,EAdL,SAACjB,GAChB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BAEI,cAACC,EAAA,EAAD,CAAOZ,KAAM,iBAAkBa,YAAa,eAAgBC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OAE1G,8BACI,oDAWDa,EA7BW,SAAC3B,GACvB,OACI,cAACgB,EAAD,CAAiBG,SAAUnB,EAAM4B,mBCmB1BC,EApBC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAKjC,OACI,sBAAK1B,UAAWC,IAAMuB,QAAtB,UACI,qBAAKxB,UAAWC,IAAM0B,aAAtB,SACKH,EAAQI,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAwB1B,KAAM0B,EAAG1B,KAAMC,GAAIyB,EAAGzB,IAA7ByB,EAAGzB,SAE3C,qBAAKJ,UAAWC,IAAMwB,SAAtB,SACKA,EAASG,KAAI,SAAAE,GAAC,OAAI,cAAC,EAAD,CAAoB/B,QAAS+B,EAAE/B,SAAjB+B,EAAE1B,SAEvC,cAAC2B,EAAD,CAAmBT,gBAZH,SAACU,GACrBN,EAAYM,EAASC,uB,0BCkBdC,sBACXrC,aApBkB,SAACV,GACnB,MAAO,CACHqC,QAASrC,EAAMgD,YAAYX,QAC3BC,SAAUtC,EAAMgD,YAAYV,SAC5BW,eAAgBjD,EAAMgD,YAAYC,mBAGjB,SAACC,GACtB,MAAO,CACHX,YAAa,SAACO,GACVI,EAASC,YAAmBL,SAWpC3C,IAFW4C,CAGbX","file":"static/js/4.10f1bae6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2K81d\",\"dialogsItems\":\"Dialogs_dialogsItems__pVB8W\",\"dialog\":\"Dialogs_dialog__HzNJg\",\"messages\":\"Dialogs_messages__3V5-3\",\"message\":\"Dialogs_message__2eRjl\",\"active\":\"Dialogs_active__3mkcZ\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth){\r\n                return <Redirect to='/login' />\r\n             }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react'\r\nimport style from '../../styles/Dialogs.module.css'\r\n\r\n\r\nexport const Message = ({ message }) => {\r\n    return (\r\n        <div className={style.message}>{message}</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport s from '../../styles/Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nexport const DialogItem = ({ name, id }) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={`/dialogs/${id}`}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/reduxFormValidators\";\r\n\r\nconst DialogMessageForm = (props)  => {\r\n    return (\r\n        <ReduxDialogForm onSubmit={props.onSubmitHandler}/>\r\n    )\r\n}\r\n\r\n// Когда мы передаем функцию с замыканием в компоненту, она возвращает нам новую функцию\r\n// поэтому начинаются проблемы, поэтому вызов maxLengthCreator нужно сделать за пределами компоненты\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {/*Поле name, это имя значения, под которым он будет сохранен в объект*/}\r\n                <Field name={\"newMessageBody\"} placeholder={\"Message text\"} component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxDialogForm = reduxForm({\r\n    // state для redux-form один, но форм будет много, поэтому каждой форме даем уникальное имя.\r\n    form: 'dialog'\r\n})(DialogForm)\r\n\r\nexport default DialogMessageForm;","import React from 'react'\r\nimport style from './../../styles/Dialogs.module.css'\r\nimport Message from './Message'\r\nimport DialogItem from \"./DialogItem\";\r\nimport DialogMessageForm from \"../Forms/Dialog\";\r\n\r\nconst Dialogs = ({dialogs, messages, sendMessage}) => {\r\n    const onSubmitHandler = (formData) => {\r\n        sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogs.map(el => <DialogItem key={el.id} name={el.name} id={el.id} />)}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messages.map(m => <Message key={m.id} message={m.message} />)}\r\n            </div>\r\n            <DialogMessageForm onSubmitHandler={onSubmitHandler}/>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport {createNewMessageAC} from \"../redux/reducers/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(createNewMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n// // Без compose\r\n// // Добавляем обертку при помощи HOC, наделяя ее Redirect`ом\r\n// const DialogsWithRedirect = withAuthRedirect(Dialogs)\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsWithRedirect)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n"],"sourceRoot":""}